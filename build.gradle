import org.gradle.api.artifacts.maven.MavenDeployment

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/groups/public" }
    }
    dependencies {
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'release'

ext.packaging = 'jar'

def dev = false

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '14.0.1'
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '1.3.9'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.9-RC1'
    compile group: 'net.sf.jung', name: 'jung-api', version: '2.0.1'
    compile group: 'net.sf.jung', name: 'jung-graph-impl', version: '2.0.1'
    compile group: 'net.sf.jung', name: 'jung-algorithms', version: '2.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.11', transitive: true
    testCompile group: 'org.easymock', name: 'easymock', version: '3.1', transitive: true
    testCompile group: 'org.hamcrest', name: 'hamcrest-integration', version: '1.3', transitive: true
}

tasks.withType(JavaCompile) {
    options.compilerArgs = ['-proc:none', '-Werror', '-Xlint']
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (dev) {
            mavenLocal()
        } else {
            mavenDeployer {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }

                repository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'flux'
                    packaging 'jar'
                    description 'Flux is a fluent-interface type-conversion framework for the Java platform.'
                    url 'https://github.com/codereligion/flux'

                    scm {
                        url 'scm:git@github.com:codereligion/flux.git'
                        connection 'scm:git@github.com:codereligion/flux.git'
                        developerConnection 'scm:git@github.com:codereligion/flux.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'whiskeysierra'
                            name 'Willi Sch√∂nborn'
                        }
                    }
                }
            }
        }
    }
}